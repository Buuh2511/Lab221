/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package doing.l.p0002;

import java.sql.Connection;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.util.HashMap;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DoanNC
 */
public class UserManagement extends javax.swing.JFrame {

    /**
     * Creates new form UserManagement
     */
    String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    String url = "jdbc:sqlserver://localhost:1433; databaseName=l.p0002; user=sa; password=123456;";
    User user;
    boolean isVietnamese;
    ResourceBundle bundle;
    DefaultTableModel model;

    public UserManagement(User user) {
        this.user = user;
        initComponents();
        HashMap<String, Object> config = Weapon.loadConfig("lp0002-config.txt");
        isVietnamese = (boolean) config.get("lang");
        loadLanguage();
        loadData();
    }

    public UserManagement() {
        initComponents();
        HashMap<String, Object> config = Weapon.loadConfig("lp0002-config.txt");
        isVietnamese = (boolean) config.get("lang");
        loadLanguage();
        loadData();

    }

    void tblMod() {
        tblUser.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblUser.getColumnModel().getColumn(1).setPreferredWidth(150);
        tblUser.getColumnModel().getColumn(2).setPreferredWidth(70);
        tblUser.getColumnModel().getColumn(3).setPreferredWidth(70);
        tblUser.getColumnModel().getColumn(4).setPreferredWidth(70);
    }

    void loadLanguage() {
        Locale.setDefault(new Locale("vi", "VN"));
        if (isVietnamese) {
            bundle = ResourceBundle.getBundle("l.p0002.MessageBundle");
        } else {
            bundle = ResourceBundle.getBundle("l.p0002.MessageBundle", Locale.US);
        }
        lblUserList.setText(bundle.getString("user-list"));
        lblUserDetalis.setText(bundle.getString("user-details"));
        lblID.setText(bundle.getString("user-ID"));
        lblName.setText(bundle.getString("user-Name"));
        lblRole.setText(bundle.getString("user-role"));
        lblSalary.setText(bundle.getString("user-salary"));
        lblPassword.setText(bundle.getString("user-password"));
        btnAdd.setText(bundle.getString("add"));
        btnSave.setText(bundle.getString("save"));
        btnDelete.setText(bundle.getString("delete"));
    }

    void loadData() {
        model = (DefaultTableModel) tblUser.getModel();
        model.addColumn(bundle.getString("user-ID"));
        model.addColumn(bundle.getString("user-Name"));
        model.addColumn(bundle.getString("user-role"));
        model.addColumn(bundle.getString("user-salary"));
        model.addColumn(bundle.getString("user-password"));
        if (user.getRole().equals("Admin")) {
            try (Connection c = lib.jdbc.OpenConnection(driver, url)) {
                String select = "select * from tblUsers";
                Statement st = c.createStatement();
                ResultSet rs = st.executeQuery(select);
                while (rs.next()) {
                    User tmpUser = new User(rs.getString("UserID"), rs.getString("UserName"), rs.getString("Role"), rs.getString("Salary"), rs.getString("Password"));
                    model.addRow(tmpUser.toVector());
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, bundle.getString("invalid"));
            }
            btnAdd.setEnabled(true);
            btnDelete.setEnabled(true);
        } else {
            model.addRow(user.toVector());
            btnAdd.setEnabled(false);
            btnDelete.setEnabled(false);
        }
        tblMod();
        tblUser.getTableHeader().setReorderingAllowed(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();
        lblUserList = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        lblRole = new javax.swing.JLabel();
        txtRole = new javax.swing.JTextField();
        txtSalary = new javax.swing.JTextField();
        lblSalary = new javax.swing.JLabel();
        lblUserDetalis = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtPassword = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUser);

        lblUserList.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblUserList.setText("User List");

        lblID.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblID.setText("ID:");

        lblRole.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblRole.setText("Role:");

        lblSalary.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblSalary.setText("Salary:");

        lblUserDetalis.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblUserDetalis.setText("User Details");

        btnAdd.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblPassword.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblPassword.setText("Password:");

        lblName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblName.setText("Name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                    .addComponent(lblUserList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblRole, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSalary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblUserDetalis, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblUserList, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(lblUserDetalis)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRole)
                    .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSalary)
                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete)
                    .addComponent(btnSave))
                .addGap(35, 35, 35))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        txtID.setText("");
        txtName.setText("");
        txtRole.setText("");
        txtSalary.setText("");
        txtPassword.setText("");
        txtID.setEditable(true);
        txtName.setEditable(true);
        txtRole.setEditable(true);
        txtSalary.setEditable(true);
        txtPassword.setEditable(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        try (Connection c = lib.jdbc.OpenConnection(driver, url)) {
            String update = "update tblUsers set UserName = ?, Role = ?, Salary = ?, Password = ? where UserID = ?";
            String insert = "insert into tblUsers values(?, ?, ?, ?, ?)";
            PreparedStatement ps;
            if (isExistedID(txtID.getText().trim())) {
                ps = c.prepareStatement(update);
                ps.setString(1, txtName.getText());
                ps.setString(2, txtRole.getText());
                ps.setString(3, txtSalary.getText());
                ps.setString(4, txtPassword.getText());
                ps.setString(5, txtID.getText());
                if (!user.getRole().equals("Admin")) {
                    user.setUserName(txtName.getText().trim());
                    user.setPassword(txtPassword.getText().trim());
                }
            } else {
                ps = c.prepareStatement(insert);
                ps.setString(1, txtID.getText());
                ps.setString(2, txtName.getText());
                ps.setString(3, txtRole.getText());
                ps.setString(4, txtSalary.getText());
                ps.setString(5, txtPassword.getText());
            }
            ps.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, bundle.getString("invalid"));
        }
        model = new DefaultTableModel();
        tblUser.setModel(model);
        loadData();
    }//GEN-LAST:event_btnSaveActionPerformed

    boolean isExistedID(String ID) {
        for (int i = 0; i < model.getColumnCount(); i++) {
//            JOptionPane.showMessageDialog(this, ID.equals(model.getValueAt(i, 0).toString()) + " " + ID + " " + model.getValueAt(0, i).toString());
            if (ID.equals(model.getValueAt(i, 0).toString())) {
                return true;
            }
        }
        return false;
    }
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "Are you sure to delete it?", "Delete confirm",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try (Connection c = lib.jdbc.OpenConnection(driver, url)) {
                int selectedRow = tblUser.getSelectedRow();
                String delete = "delete from tblUsers where UserID = ?";
                PreparedStatement ps = c.prepareStatement(delete);
                ps.setString(1, model.getValueAt(selectedRow, 0).toString());
                ps.executeUpdate();
                model = new DefaultTableModel();
                tblUser.setModel(model);
                loadData();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, bundle.getString("invalid"));
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUserMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblUser.getSelectedRow();
        txtID.setText(model.getValueAt(selectedRow, 0).toString().trim());
        txtName.setText(model.getValueAt(selectedRow, 1).toString().trim());
        txtRole.setText(model.getValueAt(selectedRow, 2).toString().trim());
        txtSalary.setText(model.getValueAt(selectedRow, 3).toString().trim());
        txtPassword.setText(model.getValueAt(selectedRow, 4).toString().trim());
        txtID.setEditable(false);
        if (user.getRole().equals("Staff") || user.getRole().equals("Seller")) {
            txtSalary.setEditable(false);
            txtRole.setEditable(false);
        } else {
            txtName.setEditable(true);
            txtRole.setEditable(true);
            txtSalary.setEditable(true);
            txtPassword.setEditable(true);
        }
    }//GEN-LAST:event_tblUserMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new UserManagement().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblSalary;
    private javax.swing.JLabel lblUserDetalis;
    private javax.swing.JLabel lblUserList;
    private javax.swing.JTable tblUser;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtRole;
    private javax.swing.JTextField txtSalary;
    // End of variables declaration//GEN-END:variables
}
