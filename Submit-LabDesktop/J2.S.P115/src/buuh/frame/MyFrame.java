/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package buuh.frame;

import java.time.LocalDate;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;

/**
 *
 * @author Buu Huynh
 */
public class MyFrame extends javax.swing.JFrame {

    /**
     * Creates new form MyFrame
     */
    public MyFrame() {
        initComponents();
    }
    
    public boolean checkID(){
        String ID = txtID.getText();
        if(ID.isEmpty()){
            JOptionPane.showMessageDialog(null, "ID can't Empty");
            txtID.requestFocus();
            return false;
        }
        if(ID.length() > 10){
            JOptionPane.showMessageDialog(null, "ID must be less than 10 characters");
            txtID.requestFocus();
            return false;
        }
        for (int i = 0; i < ID.length(); i++) {
            if((ID.charAt(i) + "").matches("\\@") || (ID.charAt(i) + "").matches("\\#") || (ID.charAt(i) + "").matches("\\$")){
                JOptionPane.showMessageDialog(null, "ID can't contain special character (@ # $)");
                txtID.requestFocus();
                return false;
            }
        }
        return true;
    }
    
    public boolean checkName(){
        String name = txtName.getText();
        if(name.isEmpty()){
            JOptionPane.showMessageDialog(null, "Name can't Empty");
            requestFocus();
            return false;
        }
        if(name.length() > 30){
            JOptionPane.showMessageDialog(null, "Name must be less than 30 words");
            txtName.requestFocus();
            return false;
        }
        return true;
    }
    
    public boolean checkDate(){
        String date = txtDay.getText();
        if(date.isEmpty()){
            JOptionPane.showMessageDialog(null, "Date can't Empty");
            txtDay.requestFocus();
            return false;
        }
        if(date.matches("^[0-9]{2}/[0-9]{2}/[0-9]{4}")){
            StringTokenizer stk = new StringTokenizer(date, "/");
            int day = Integer.parseInt(stk.nextToken());
            int month = Integer.parseInt(stk.nextToken());
            int year = Integer.parseInt(stk.nextToken());
            try {
                LocalDate.of(year, month, day);
                return true;
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Date is invalid");
                txtDay.requestFocus();
                return false;
            }
        }else{
            JOptionPane.showMessageDialog(null, "Format mm/dd/yyyy");
            txtDay.requestFocus();
            return false;
        }
    }
    
    public boolean checkPhoneNumber(){
    String phone = txtPhoneNumber.getText();
    if(phone.isEmpty()){
        JOptionPane.showMessageDialog(null, "Phone Number can't Empty");
        txtPhoneNumber.requestFocus();
        return false;
    }
    if(!phone.matches("\\d{9}")){
        JOptionPane.showMessageDialog(null, "Phone number must be 9 number");
        txtPhoneNumber.requestFocus();
        return false;
    }
    return true;
}
    
    public boolean checkMail(){
        String mail = txtMail.getText();
        int check = 0;
        if(mail.isEmpty()){
            JOptionPane.showMessageDialog(null, "Email can't empty");
            txtMail.requestFocus();
            return false;
        }
        if(mail.length() > 30){
            JOptionPane.showMessageDialog(null, "Email must be less than 30 characters");
            txtMail.requestFocus();
            return false;
        }
        for (int i = 0; i < mail.length(); i++) {
            if((mail.charAt(i) + "").matches("\\!") || (mail.charAt(i) + "").matches("\\#") || (mail.charAt(i) + "").matches("\\$")){
                JOptionPane.showMessageDialog(null, "Mail must not contain special (! # $)");
                txtMail.requestFocus();
                return false;
            }
            if(!mail.matches("[a-zA-Z][^\\@\\#\\$\\!]*\\@([\\w]+\\.)[\\w]+")){
                JOptionPane.showMessageDialog(null, "Wrong format");
                txtMail.requestFocus();
                return false;
            }
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblID = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblDay = new javax.swing.JLabel();
        lblNumber = new javax.swing.JLabel();
        lblMail = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtDay = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        txtMail = new javax.swing.JTextField();
        btnCheck = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblID.setText("Student ID");

        lblName.setText("Student Name");

        lblDay.setText("BirthDay");

        lblNumber.setText("Phone Number");

        lblMail.setText("Email");

        txtPhoneNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPhoneNumberKeyTyped(evt);
            }
        });

        btnCheck.setText("Check");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblID)
                    .addComponent(lblName)
                    .addComponent(lblDay)
                    .addComponent(lblNumber)
                    .addComponent(lblMail, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(93, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCheck)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDay)
                    .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumber)
                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCheck)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        // TODO add your handling code here:
        if(checkID() && checkName() && checkDate() && checkPhoneNumber() && checkMail()){
            JOptionPane.showMessageDialog(null, "Valid");
        }
    }//GEN-LAST:event_btnCheckActionPerformed

    private void txtPhoneNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneNumberKeyTyped
        // TODO add your handling code here:
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_txtPhoneNumberKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheck;
    private javax.swing.JLabel lblDay;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblMail;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNumber;
    private javax.swing.JTextField txtDay;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtMail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhoneNumber;
    // End of variables declaration//GEN-END:variables
}
