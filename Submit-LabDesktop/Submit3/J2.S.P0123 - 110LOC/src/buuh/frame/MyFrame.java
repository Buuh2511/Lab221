/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package buuh.frame;

import java.awt.Color;
import java.awt.Graphics;
import javax.swing.ButtonGroup;

/**
 *
 * @author Buu Huynh
 */
public class MyFrame extends javax.swing.JFrame {

    private int x, y;
    private int shapeWidth, shapeHeight;
    Color color, BGColor;
    ButtonGroup group = new ButtonGroup();
    ButtonGroup BGGroup = new ButtonGroup();
    String type = "Oval";

    /**
     * Creates new form MyFrame
     */
    public MyFrame() {
        initComponents();
        setLocationRelativeTo(null);
        makeButtonGroup();
        setShapeSize(60, 100);
        miRedActionPerformed(null);
        miBGWhiteActionPerformed(null);
    }

    private void makeButtonGroup() {
        group.add(miRed);
        group.add(miGreen);
        group.add(miBlue);
        group.add(miCyan);
        group.add(miMagenta);
        group.add(miYellow);
        group.add(miBlack);
        group.add(miGray);
        group.add(miWhite);
        group.clearSelection();
        BGGroup.add(miBGWhite);
        BGGroup.add(miBGRed);
        BGGroup.add(miBGGreen);
        BGGroup.add(miBGBlue);
        BGGroup.clearSelection();
    }

    private void setShapeSize(int shapeHeight, int shapeWidth) {
        this.shapeHeight = shapeHeight;
        this.shapeWidth = shapeWidth;
    }

    private void drawShape() {
        int tmpWidth = this.shapeWidth;
        int tmpHeight = this.shapeHeight;
        Graphics g = jPanel1.getGraphics();
        g.setColor(color);
        if (cbmiLargeShapes.isSelected()) {
            tmpWidth = 2 * this.shapeWidth;
            tmpHeight = 2 * this.shapeHeight;
        }
        switch (type) {
            case "Oval":
                g.fillOval(x, y, tmpWidth, tmpHeight);
                break;

            case "Rectangle":
                g.fillRect(x, y, tmpWidth, tmpHeight);
                break;

            case "RoundRect":
                int arc = (tmpHeight < tmpWidth) ? tmpHeight / 2 : tmpWidth / 2;
                g.fillRoundRect(x, y, tmpWidth, tmpHeight, arc, arc);
                break;
        }
        if (cbmiBorder.isSelected()) {
            drawBorder();
        }
    }

    private void drawBorder() {
        int tmpWidth = this.shapeWidth, tmpHeight = this.shapeHeight;
        Graphics g = jPanel1.getGraphics();
        if (cbmiLargeShapes.isSelected()) {
            tmpWidth = 2 * this.shapeWidth;
            tmpHeight = 2 * this.shapeHeight;
        }
        g.setColor(Color.BLACK);
        switch (type) {
            case "Oval":
                g.drawOval(x, y, tmpWidth, tmpHeight);
                break;

            case "Rectangle":
                g.drawRect(x, y, tmpWidth, tmpHeight);
                break;

            case "RoundRect":
                int arc;
                if (tmpHeight < tmpWidth) {
                    arc = tmpHeight / 2;
                } else {
                    arc = tmpWidth / 2;
                }
//                int arc = (tmpHeight < tmpWidth) ? tmpHeight / 2 : tmpWidth / 2;
                g.drawRoundRect(x, y, tmpWidth, tmpHeight, arc, arc);
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        mnAdd = new javax.swing.JMenu();
        miRectangle = new javax.swing.JMenuItem();
        miOval = new javax.swing.JMenuItem();
        miRoundRect = new javax.swing.JMenuItem();
        mnColor = new javax.swing.JMenu();
        miRed = new javax.swing.JRadioButtonMenuItem();
        miBlue = new javax.swing.JRadioButtonMenuItem();
        miYellow = new javax.swing.JRadioButtonMenuItem();
        miGreen = new javax.swing.JRadioButtonMenuItem();
        miCyan = new javax.swing.JRadioButtonMenuItem();
        miGray = new javax.swing.JRadioButtonMenuItem();
        miMagenta = new javax.swing.JRadioButtonMenuItem();
        miBlack = new javax.swing.JRadioButtonMenuItem();
        miWhite = new javax.swing.JRadioButtonMenuItem();
        mnOptions = new javax.swing.JMenu();
        miClear = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        cbmiLargeShapes = new javax.swing.JCheckBoxMenuItem();
        cbmiBorder = new javax.swing.JCheckBoxMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mnBG = new javax.swing.JMenu();
        miBGWhite = new javax.swing.JCheckBoxMenuItem();
        miBGRed = new javax.swing.JCheckBoxMenuItem();
        miBGBlue = new javax.swing.JCheckBoxMenuItem();
        miBGGreen = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 552, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 353, Short.MAX_VALUE)
        );

        mnAdd.setText("Add");

        miRectangle.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        miRectangle.setText("Rectangle");
        miRectangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miRectangleActionPerformed(evt);
            }
        });
        mnAdd.add(miRectangle);

        miOval.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        miOval.setText("Oval");
        miOval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOvalActionPerformed(evt);
            }
        });
        mnAdd.add(miOval);

        miRoundRect.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        miRoundRect.setText("Round Rect");
        miRoundRect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miRoundRectActionPerformed(evt);
            }
        });
        mnAdd.add(miRoundRect);

        menuBar.add(mnAdd);

        mnColor.setText("Color");

        miRed.setSelected(true);
        miRed.setText("Red");
        miRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miRedActionPerformed(evt);
            }
        });
        mnColor.add(miRed);

        miBlue.setText("Blue");
        miBlue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBlueActionPerformed(evt);
            }
        });
        mnColor.add(miBlue);

        miYellow.setText("Yellow");
        miYellow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miYellowActionPerformed(evt);
            }
        });
        mnColor.add(miYellow);

        miGreen.setText("Green");
        miGreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miGreenActionPerformed(evt);
            }
        });
        mnColor.add(miGreen);

        miCyan.setText("Cyan");
        miCyan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miCyanActionPerformed(evt);
            }
        });
        mnColor.add(miCyan);

        miGray.setText("Gray");
        miGray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miGrayActionPerformed(evt);
            }
        });
        mnColor.add(miGray);

        miMagenta.setText("Magenta");
        miMagenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miMagentaActionPerformed(evt);
            }
        });
        mnColor.add(miMagenta);

        miBlack.setText("Black");
        miBlack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBlackActionPerformed(evt);
            }
        });
        mnColor.add(miBlack);

        miWhite.setText("White");
        miWhite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miWhiteActionPerformed(evt);
            }
        });
        mnColor.add(miWhite);

        menuBar.add(mnColor);

        mnOptions.setText("Options");

        miClear.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        miClear.setText("Clear");
        miClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miClearActionPerformed(evt);
            }
        });
        mnOptions.add(miClear);
        mnOptions.add(jSeparator1);

        cbmiLargeShapes.setText("Add Large Shapes");
        mnOptions.add(cbmiLargeShapes);

        cbmiBorder.setText("Add Shapes with Border");
        mnOptions.add(cbmiBorder);
        mnOptions.add(jSeparator2);

        mnBG.setText("Background Color");

        miBGWhite.setText("White");
        miBGWhite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBGWhiteActionPerformed(evt);
            }
        });
        mnBG.add(miBGWhite);

        miBGRed.setText("Light Red");
        miBGRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBGRedActionPerformed(evt);
            }
        });
        mnBG.add(miBGRed);

        miBGBlue.setText("Light Blue");
        miBGBlue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBGBlueActionPerformed(evt);
            }
        });
        mnBG.add(miBGBlue);

        miBGGreen.setSelected(true);
        miBGGreen.setText("Light Green");
        miBGGreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBGGreenActionPerformed(evt);
            }
        });
        mnBG.add(miBGGreen);

        mnOptions.add(mnBG);

        menuBar.add(mnOptions);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miBGBlueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBGBlueActionPerformed
        // TODO add your handling code here:
        miBGBlue.setSelected(true);
        BGColor = new Color(255 / 2, 255 / 2, 255);
        jPanel1.setBackground(BGColor);
    }//GEN-LAST:event_miBGBlueActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        // panel dc 
        this.x = evt.getX() - shapeWidth / 2;
        this.y = evt.getY() - shapeHeight / 2;
        drawShape();
    }//GEN-LAST:event_jPanel1MouseClicked

    private void miRectangleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miRectangleActionPerformed
        // TODO add your handling code here:
        type = "Rectangle";
    }//GEN-LAST:event_miRectangleActionPerformed

    private void miOvalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOvalActionPerformed
        // TODO add your handling code here:
        type = "Oval";
    }//GEN-LAST:event_miOvalActionPerformed

    private void miRoundRectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miRoundRectActionPerformed
        // TODO add your handling code here:
        type = "RoundRect";
    }//GEN-LAST:event_miRoundRectActionPerformed

    private void miBGWhiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBGWhiteActionPerformed
        // TODO add your handling code here:
        miBGWhite.setSelected(true);
        BGColor = Color.WHITE;
        jPanel1.setBackground(BGColor);
    }//GEN-LAST:event_miBGWhiteActionPerformed

    private void miBGRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBGRedActionPerformed
        // TODO add your handling code here:
        miBGRed.setSelected(true);
        BGColor = new Color(255, 255 / 2, 255 / 2);
        jPanel1.setBackground(BGColor);
    }//GEN-LAST:event_miBGRedActionPerformed

    private void miRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miRedActionPerformed
        // TODO add your handling code here:
        miRed.setSelected(true);
        color = Color.RED;
    }//GEN-LAST:event_miRedActionPerformed

    private void miBlueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBlueActionPerformed
        // TODO add your handling code here:
        miBlue.setSelected(true);
        color = Color.BLUE;
    }//GEN-LAST:event_miBlueActionPerformed

    private void miYellowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miYellowActionPerformed
        // TODO add your handling code here:
        miYellow.setSelected(true);
        color = Color.YELLOW;
    }//GEN-LAST:event_miYellowActionPerformed

    private void miGreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miGreenActionPerformed
        // TODO add your handling code here:
        miGreen.setSelected(true);
        color = Color.GREEN;
    }//GEN-LAST:event_miGreenActionPerformed

    private void miCyanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miCyanActionPerformed
        // TODO add your handling code here:
        miCyan.setSelected(true);
        color = Color.CYAN;
    }//GEN-LAST:event_miCyanActionPerformed

    private void miGrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miGrayActionPerformed
        // TODO add your handling code here:
        miGray.setSelected(true);
        color = Color.GRAY;
    }//GEN-LAST:event_miGrayActionPerformed

    private void miMagentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miMagentaActionPerformed
        // TODO add your handling code here:
        miMagenta.setSelected(true);
        color = Color.MAGENTA;
    }//GEN-LAST:event_miMagentaActionPerformed

    private void miBlackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBlackActionPerformed
        // TODO add your handling code here:
        miBlack.setSelected(true);
        color = Color.BLACK;
    }//GEN-LAST:event_miBlackActionPerformed

    private void miWhiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miWhiteActionPerformed
        // TODO add your handling code here:
        miWhite.setSelected(true);
        color = Color.WHITE;
    }//GEN-LAST:event_miWhiteActionPerformed

    private void miClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miClearActionPerformed
        // TODO add your handling code here:
        jPanel1.getGraphics().clearRect(0, 0, jPanel1.getWidth(), jPanel1.getHeight());
    }//GEN-LAST:event_miClearActionPerformed

    private void miBGGreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBGGreenActionPerformed
        // TODO add your handling code here:
        miBGGreen.setSelected(true);
        BGColor = new Color(255 / 2, 255, 255 / 2);
        jPanel1.setBackground(BGColor);
    }//GEN-LAST:event_miBGGreenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem cbmiBorder;
    private javax.swing.JCheckBoxMenuItem cbmiLargeShapes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JCheckBoxMenuItem miBGBlue;
    private javax.swing.JCheckBoxMenuItem miBGGreen;
    private javax.swing.JCheckBoxMenuItem miBGRed;
    private javax.swing.JCheckBoxMenuItem miBGWhite;
    private javax.swing.JRadioButtonMenuItem miBlack;
    private javax.swing.JRadioButtonMenuItem miBlue;
    private javax.swing.JMenuItem miClear;
    private javax.swing.JRadioButtonMenuItem miCyan;
    private javax.swing.JRadioButtonMenuItem miGray;
    private javax.swing.JRadioButtonMenuItem miGreen;
    private javax.swing.JRadioButtonMenuItem miMagenta;
    private javax.swing.JMenuItem miOval;
    private javax.swing.JMenuItem miRectangle;
    private javax.swing.JRadioButtonMenuItem miRed;
    private javax.swing.JMenuItem miRoundRect;
    private javax.swing.JRadioButtonMenuItem miWhite;
    private javax.swing.JRadioButtonMenuItem miYellow;
    private javax.swing.JMenu mnAdd;
    private javax.swing.JMenu mnBG;
    private javax.swing.JMenu mnColor;
    private javax.swing.JMenu mnOptions;
    // End of variables declaration//GEN-END:variables
}
