/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab221_j2sp0113;

import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Admin
 */
public class BookManager extends javax.swing.JFrame {

    /**
     * Creates new form BookManager
     */
    DefaultListModel<String> listModel = new DefaultListModel<>();
    Vector<BookDTO> v = new Vector<>();

    public BookManager() {
        initComponents();
        ListBook.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        v.add(new BookDTO("TJAVA001", "Java core - Part1", "Andrei Chang", "Standford University", "2000", true));
        v.add(new BookDTO("TJAVA003", "Java Server Pages", "TruongLV2", "FPT University", "2018", true));
        v.add(new BookDTO("TJAVA004", "JSP and MVC model", "TruongLV2", "FPT University", "2019", true));
        showList();
        for (int i = 1900; i < 2020; i++) {
            cbbYear.addItem(i + "");
        }
        ckRent.setSelected(false);
    }

    public boolean checkCodeAdd() {
        String code = txtCode.getText().trim();
        if (code.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Code must not null");
            return false;
        }
        for (int i = 0; i < v.size(); i++) {
            if (code.equalsIgnoreCase(v.get(i).getCode())) {
                JOptionPane.showMessageDialog(null, "Code not duplicate");
                txtCode.requestFocus();
                return false;
            }
        }
        return true;
    }

    public boolean checkName() {
        String name = txtName.getText().trim();
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Name must not null");
            txtName.requestFocus();
            return false;
        }
        for (int i = 0; i < v.size(); i++) {
            if (name.equalsIgnoreCase(v.get(i).getName())) {
                JOptionPane.showMessageDialog(null, "Name not duplicate");
                txtName.requestFocus();
                return false;
            }
        }
        return true;
    }

    public boolean checkAuthor() {
        String author = txtAuthor.getText().trim();
        if (author.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Author must not null");
            txtName.requestFocus();
            return false;
        }
        return true;
    }

    public boolean checkPublisher() {
        String publisher = txtPubliser.getText().trim();
        if (publisher.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Publisher must not null");
            txtName.requestFocus();
            return false;
        }
        return true;
    }

    public void clearText() {
        ListBook.clearSelection();
        txtCode.setText("");
        txtName.setText("");
        txtAuthor.setText("");
        txtPubliser.setText("");
        cbbYear.setSelectedIndex(0);
        ckRent.setSelected(false);
    }

    public void showList() {
        listModel.removeAllElements();
        for (int i = 0; i < v.size(); i++) {
            listModel.addElement(v.get(i).getName());
        }
        ListBook.setModel(listModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListBook = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ckRent = new javax.swing.JCheckBox();
        txtCode = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAuthor = new javax.swing.JTextField();
        txtPubliser = new javax.swing.JTextField();
        cbbYear = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Book List");

        ListBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListBookMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ListBook);

        jLabel2.setText("Book Code:");

        jLabel3.setText("Book Name:");

        jLabel4.setText("Author");

        jLabel5.setText("Publisher");

        jLabel6.setText("Publisher year: ");

        ckRent.setText("Rent");

        cbbYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbYearActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCode, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                                    .addComponent(txtName)
                                    .addComponent(txtAuthor)
                                    .addComponent(txtPubliser)
                                    .addComponent(cbbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(btnSave)
                                .addGap(93, 93, 93)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnRemove)
                                        .addGap(92, 92, 92)
                                        .addComponent(btnExit))
                                    .addComponent(ckRent))))))
                .addContainerGap(178, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPubliser, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbbYear, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnSave))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ckRent)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnRemove)
                                    .addComponent(btnExit))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbbYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbYearActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        int row = ListBook.getSelectedIndex();
        if (row < 0) {
            if (checkCodeAdd() && checkName() && checkAuthor() && checkPublisher()) {
                String code = txtCode.getText().trim();
                String name = txtName.getText().trim();
                String author = txtAuthor.getText().trim();
                String publisher = txtPubliser.getText().trim();
                String year = cbbYear.getSelectedItem().toString();
                boolean rent = ckRent.isSelected();
                BookDTO dto = new BookDTO(code, name, author, publisher, year, rent);
                v.add(dto);

                clearText();
                showList();
                JOptionPane.showMessageDialog(null, "Add Succesfull");
            }
        } else {

            String name = txtName.getText().trim();
            String author = txtAuthor.getText().trim();
            String publisher = txtPubliser.getText().trim();
            String year = cbbYear.getSelectedItem().toString();
            boolean rent = ckRent.isSelected();

            v.get(row).setName(name);
            v.get(row).setAuthor(author);
            v.get(row).setPublisher(publisher);
            v.get(row).setYear(year);
            v.get(row).setRent(rent);

            clearText();
            showList();
            JOptionPane.showMessageDialog(null, "Update Succesfull");
        }
    
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int row = ListBook.getSelectedIndex();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please choose row");
        } else {
            v.remove(row);
            clearText();
            showList();
            JOptionPane.showMessageDialog(null, "Remove!!");
        }

        if (listModel.getSize() > 0) {
            ListBook.setSelectedIndex(0);
            txtCode.setEditable(false);

            txtCode.setText(v.get(0).getCode());
            txtName.setText(v.get(0).getName());
            txtAuthor.setText(v.get(0).getAuthor());
            txtPubliser.setText(v.get(0).getAuthor());
            cbbYear.setSelectedItem(v.get(0).getYear());
            ckRent.setSelected(v.get(0).isRent());
        } else {
            clearText();
            txtCode.setEditable(true);
        }

    }//GEN-LAST:event_btnRemoveActionPerformed

    private void ListBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListBookMouseClicked
        int row = ListBook.getSelectedIndex();
        if (row < 0) {
            txtCode.setEditable(true);
            clearText();
        } else {
            txtCode.setEditable(false);
            txtCode.setText(v.get(row).getCode());
            txtName.setText(v.get(row).getName());
            txtAuthor.setText(v.get(row).getAuthor());
            txtPubliser.setText(v.get(row).getPublisher());
            cbbYear.setSelectedItem(v.get(row).getYear());
            ckRent.setSelected(v.get(row).isRent());
        }
    }//GEN-LAST:event_ListBookMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookManager.class

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookManager.class

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookManager.class

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookManager.class

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ListBook;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cbbYear;
    private javax.swing.JCheckBox ckRent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPubliser;
    // End of variables declaration//GEN-END:variables
}
